name: Update Release
on:
  push:
    tags:
      - "**"
jobs:
  build:
    name: build
    strategy:
      fail-fast: true
      matrix:
        gameVersion: [011403, 030400, 100000]
        include:
          - gameVersion: 011403
            name: ARCadia-classic
          - gameVersion: 030400
            name: ARCadia-WoTLK
          - gameVersion: 100000
            name: "ARCadia"

    runs-on: ubuntu-latest
    steps:
      - name: Determine Release Type
        id: release_type
        run: >-
          echo "::set-output name=RELEASE_TYPE::$(
            if [[ $github.ref_name == *-alpha ]] || [[ $github.ref_name == *-beta ]]; then 
              echo $github.ref_name | sed -E "s/[v0-9.-]+//g"
            fi
          )"
      - name: Determine CurseForge Game ID
        id: game_id
        run: >-
          echo "::set-output name=GAME_ID::$(
            curl -H "X-Api-Token:e5b33a2d-b033-4e8a-babf-c3e5f3a45ab2" https://wow.curseforge.com/api/game/versions | jq '.[] | select( .apiVersion == ${{ matrix.gameVersion }}' | jq '.id'
          )"
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Create Preliminary Builds
        id: create_preliminary_build
        if: ${{ github.ref_name == '*-alpha' || github.ref_name == '*-beta' }}
        run: ./build.sh -i ${{ matrix.gameVersion }} -n ${{ matrix.name }}
        shell: bash
      - name: Create Release Builds
        id: create_release-build
        if: ${{ github.ref_name != 'alpha' || github.ref_name != 'beta' }}
        run: ./build.sh -i ${{ matrix.gameVersion }} -n ${{ matrix.name }}
        shell: bash
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE_PAT }}
          file: ./build/${{ matrix.name }}-${{ github.ref_name }}.zip
          asset_name: ${{ matrix.name }}-${{ github.ref_name }}.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload to Curseforge
        # uses: itsmeow/curseforge-upload@v3
        # with:
        #   token: ${{ secrets.CURSEFORGE_TOKEN }}
        #   project_id: ${{ secrets.PROJECT_ID }}
        #   game_endpoint: wow
        #   file_path: ./build/${{ matrix.name }}-${{ github.ref_name }}.zip
        #   game_versions: ${{ steps.game_id.outputs.GAME_ID }}
        #   release_type: ${{ steps.release_type.outputs.RELEASE_TYPE }}
        run: >-
          echo "Game ID: ${{ steps.game_id.outputs.GAME_ID }}, Release Type: ${{ steps.release_type.outputs.RELEASE_TYPE }}"
